name: "cri plugin validation test"
on:
  push:
    branches:
      - cri-test
      - wasm
      - image_pull
  pull_request:
    branches:
      - cri-test
      - wasm
      - image_pull

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  mirror:
    name: "cri validation test"
    runs-on: ubuntu-latest
    permissions:
      packages: write

    defaults:
      run:
        working-directory: src/github.com/containerd/containerd

    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19.6'

      - uses: actions/checkout@v3
        with:
          path: src/github.com/containerd/containerd

      - name: Set env
        shell: bash
        run: |
          echo "GOPATH=${{ github.workspace }}" >> $GITHUB_ENV
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

      - name: Install containerd dependencies
        env:
          RUNC_FLAVOR: ${{ matrix.runc }}
          GOFLAGS: -modcacherw
        run: |
          sudo apt-get install -y gperf
          sudo -E PATH=$PATH script/setup/install-seccomp

      - name: Install containerd
        env:
          CGO_ENABLED: 1
        run: |
          make binaries GO_BUILD_FLAGS="-mod=vendor" GO_BUILDTAGS="no_btrfs"
          sudo -E PATH=$PATH make install

      - name: Install runc
        shell: bash
        run: |
          wget https://github.com/opencontainers/runc/releases/download/v1.1.4/runc.amd64
          sudo install -m 755 runc.amd64 /usr/local/sbin/runc
          rm runc.amd64

      - name: Install CNI plugins
        shell: bash
        run: |
          wget https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz
          sudo mkdir -p /opt/cni/bin
          sudo tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-v1.1.1.tgz
          rm cni-plugins-linux-amd64-v1.1.1.tgz

      - name: Install critest
        shell: bash
        run: |
          VERSION="v1.26.0"
          wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/critest-$VERSION-linux-amd64.tar.gz
          sudo tar zxvf critest-$VERSION-linux-amd64.tar.gz -C /usr/local/bin
          rm -f critest-$VERSION-linux-amd64.tar.gz

      - name: Install ginkgo
        shell: bash
        run: |
          go get -u github.com/onsi/ginkgo/ginkgo

      - name: Cri validate test
        shell: bash
        run: |
          sudo containerd -l debug
          sudo critest --runtime-endpoint /run/containerd/containerd.sock --ginkgo.focus="TestCRISuite"
